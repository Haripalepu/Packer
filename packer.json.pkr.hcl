packer {
  required_plugins {
    azure = {
      source  = "github.com/hashicorp/azure"
      version = "~> 1"
    }
  }
}

variable "client_id" {
  type    = string
  default = ""
}

variable "client_secret" {
  type    = string
  default = ""
}

variable "image_offer" {
  type    = string
  default = ""
}

variable "image_publisher" {
  type    = string
  default = ""
}

variable "image_sku" {
  type    = string
  default = ""
}

variable "location" {
  type    = string
  default = ""
}

variable "managed_image_name" {
  type    = string
  default = ""
}

variable "managed_image_resource_group_name" {
  type    = string
  default = ""
}

variable "os_type" {
  type    = string
  default = ""
}

variable "subscription_id" {
  type    = string
  default = ""
}

variable "tenant_id" {
  type    = string
  default = ""
}

variable "vm_size" {
  type    = string
  default = ""
}

source "azure-arm" "autogenerated_1" {
  client_id                         = "${var.client_id}"
  client_secret                     = "${var.client_secret}"
  image_offer                       = "${var.image_offer}"
  image_publisher                   = "${var.image_publisher}"
  image_sku                         = "${var.image_sku}"
  location                          = "${var.location}"
  managed_image_name                = "${var.managed_image_name}"
  managed_image_resource_group_name = "${var.managed_image_resource_group_name}"
  os_type                           = "${var.os_type}"
  subscription_id                   = "${var.subscription_id}"
  tenant_id                         = "${var.tenant_id}"
  vm_size                           = "${var.vm_size}"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "shell" {
    inline = ["sudo useradd --no-create-home --shell /bin/false node_exporter", "wget https://github.com/prometheus/node_exporter/releases/download/v1.3.1/node_exporter-1.3.1.linux-amd64.tar.gz", "tar xvf node_exporter-1.3.1.linux-amd64.tar.gz", "sudo cp node_exporter-1.3.1.linux-amd64/node_exporter /usr/local/bin/", "sudo chown node_exporter:node_exporter /usr/local/bin/node_exporter"]
  }

  provisioner "file" {
    destination = "/tmp/node_exporter.service"
    source      = "node_exporter.service"
  }

  provisioner "shell" {
    inline = ["sudo cp /tmp/node_exporter.service /lib/systemd/system/node_exporter.service", "sudo systemctl daemon-reload", "sudo systemctl start node_exporter", "sudo systemctl restart node_exporter", "sudo systemctl enable node_exporter", "sudo systemctl status node_exporter", "rm -rf node_exporter*"]
  }

  provisioner "shell" {
    execute_command = "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'"
    inline          = ["sudo apt update", "sudo apt install software-properties-common -y", "sudo apt-add-repository --yes --update ppa:ansible/ansible", "sudo apt update", "sudo apt install ansible -y", "sudo apt install nginx -y", "sudo apt install python-apt -y", "sudo apt install -y git stress htop", "sudo git clone -b azure-vmss-autoscaling https://github.com/mavrick202/ansibletemplatetesting.git /myrepo", "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"]
    inline_shebang  = "/bin/sh -x"
  }

}
